|alu32
clock => clock.IN1
reset => reset.IN1
a[0] => a[0].IN8
a[1] => a[1].IN8
a[2] => a[2].IN8
a[3] => a[3].IN8
a[4] => a[4].IN8
a[5] => a[5].IN8
a[6] => a[6].IN8
a[7] => a[7].IN8
a[8] => a[8].IN8
a[9] => a[9].IN8
a[10] => a[10].IN8
a[11] => a[11].IN8
a[12] => a[12].IN8
a[13] => a[13].IN8
a[14] => a[14].IN8
a[15] => a[15].IN8
a[16] => a[16].IN8
a[17] => a[17].IN8
a[18] => a[18].IN8
a[19] => a[19].IN8
a[20] => a[20].IN8
a[21] => a[21].IN8
a[22] => a[22].IN8
a[23] => a[23].IN8
a[24] => a[24].IN8
a[25] => a[25].IN8
a[26] => a[26].IN8
a[27] => a[27].IN8
a[28] => a[28].IN8
a[29] => a[29].IN8
a[30] => a[30].IN8
a[31] => a[31].IN8
b[0] => b[0].IN8
b[1] => b[1].IN8
b[2] => b[2].IN8
b[3] => b[3].IN8
b[4] => b[4].IN8
b[5] => b[5].IN8
b[6] => b[6].IN8
b[7] => b[7].IN8
b[8] => b[8].IN8
b[9] => b[9].IN8
b[10] => b[10].IN8
b[11] => b[11].IN8
b[12] => b[12].IN8
b[13] => b[13].IN8
b[14] => b[14].IN8
b[15] => b[15].IN8
b[16] => b[16].IN8
b[17] => b[17].IN8
b[18] => b[18].IN8
b[19] => b[19].IN8
b[20] => b[20].IN8
b[21] => b[21].IN8
b[22] => b[22].IN8
b[23] => b[23].IN8
b[24] => b[24].IN8
b[25] => b[25].IN8
b[26] => b[26].IN8
b[27] => b[27].IN8
b[28] => b[28].IN8
b[29] => b[29].IN8
b[30] => b[30].IN8
b[31] => b[31].IN8
aluop[0] => aluop[0].IN32
aluop[1] => aluop[1].IN32
aluop[2] => aluop[2].IN32
result[0] << mux3x8:mux_0.port2
result[1] << mux3x8:mux_1.port2
result[2] << mux3x8:mux_2.port2
result[3] << mux3x8:mux_3.port2
result[4] << mux3x8:mux_4.port2
result[5] << mux3x8:mux_5.port2
result[6] << mux3x8:mux_6.port2
result[7] << mux3x8:mux_7.port2
result[8] << mux3x8:mux_8.port2
result[9] << mux3x8:mux_9.port2
result[10] << mux3x8:mux_10.port2
result[11] << mux3x8:mux_11.port2
result[12] << mux3x8:mux_12.port2
result[13] << mux3x8:mux_13.port2
result[14] << mux3x8:mux_14.port2
result[15] << mux3x8:mux_15.port2
result[16] << mux3x8:mux_16.port2
result[17] << mux3x8:mux_17.port2
result[18] << mux3x8:mux_18.port2
result[19] << mux3x8:mux_19.port2
result[20] << mux3x8:mux_20.port2
result[21] << mux3x8:mux_21.port2
result[22] << mux3x8:mux_22.port2
result[23] << mux3x8:mux_23.port2
result[24] << mux3x8:mux_24.port2
result[25] << mux3x8:mux_25.port2
result[26] << mux3x8:mux_26.port2
result[27] << mux3x8:mux_27.port2
result[28] << mux3x8:mux_28.port2
result[29] << mux3x8:mux_29.port2
result[30] << mux3x8:mux_30.port2
result[31] << mux3x8:mux_31.port2


|alu32|add32:add0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
b[16] => b[16].IN1
b[17] => b[17].IN1
b[18] => b[18].IN1
b[19] => b[19].IN1
b[20] => b[20].IN1
b[21] => b[21].IN1
b[22] => b[22].IN1
b[23] => b[23].IN1
b[24] => b[24].IN1
b[25] => b[25].IN1
b[26] => b[26].IN1
b[27] => b[27].IN1
b[28] => b[28].IN1
b[29] => b[29].IN1
b[30] => b[30].IN1
b[31] => b[31].IN1
cin => ~NO_FANOUT~
out[0] <= full_adder:fa1.port3
out[1] <= full_adder:fa2.port3
out[2] <= full_adder:fa3.port3
out[3] <= full_adder:fa4.port3
out[4] <= full_adder:fa5.port3
out[5] <= full_adder:fa6.port3
out[6] <= full_adder:fa7.port3
out[7] <= full_adder:fa8.port3
out[8] <= full_adder:fa9.port3
out[9] <= full_adder:fa10.port3
out[10] <= full_adder:fa20.port3
out[11] <= full_adder:fa30.port3
out[12] <= full_adder:fa40.port3
out[13] <= full_adder:fa50.port3
out[14] <= full_adder:fa60.port3
out[15] <= full_adder:fa70.port3
out[16] <= full_adder:fa80.port3
out[17] <= full_adder:fa90.port3
out[18] <= full_adder:fa100.port3
out[19] <= full_adder:fa200.port3
out[20] <= full_adder:fa300.port3
out[21] <= full_adder:fa400.port3
out[22] <= full_adder:fa500.port3
out[23] <= full_adder:fa600.port3
out[24] <= full_adder:fa700.port3
out[25] <= full_adder:fa800.port3
out[26] <= full_adder:fa900.port3
out[27] <= full_adder:fa1000.port3
out[28] <= full_adder:fa2000.port3
out[29] <= full_adder:fa3000.port3
out[30] <= full_adder:fa4000.port3
out[31] <= full_adder:fa5000.port3
cout <= <GND>


|alu32|add32:add0|full_adder:fa1
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa2
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa3
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa4
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa5
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa6
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa7
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa8
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa9
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa10
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa20
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa30
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa40
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa50
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa60
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa70
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa80
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa90
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa100
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa200
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa300
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa400
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa500
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa600
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa700
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa800
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa900
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa1000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa2000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa3000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa4000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|add32:add0|full_adder:fa5000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => temp_out[0].IN1
b[1] => temp_out[1].IN1
b[2] => temp_out[2].IN1
b[3] => temp_out[3].IN1
b[4] => temp_out[4].IN1
b[5] => temp_out[5].IN1
b[6] => temp_out[6].IN1
b[7] => temp_out[7].IN1
b[8] => temp_out[8].IN1
b[9] => temp_out[9].IN1
b[10] => temp_out[10].IN1
b[11] => temp_out[11].IN1
b[12] => temp_out[12].IN1
b[13] => temp_out[13].IN1
b[14] => temp_out[14].IN1
b[15] => temp_out[15].IN1
b[16] => temp_out[16].IN1
b[17] => temp_out[17].IN1
b[18] => temp_out[18].IN1
b[19] => temp_out[19].IN1
b[20] => temp_out[20].IN1
b[21] => temp_out[21].IN1
b[22] => temp_out[22].IN1
b[23] => temp_out[23].IN1
b[24] => temp_out[24].IN1
b[25] => temp_out[25].IN1
b[26] => temp_out[26].IN1
b[27] => temp_out[27].IN1
b[28] => temp_out[28].IN1
b[29] => temp_out[29].IN1
b[30] => temp_out[30].IN1
b[31] => temp_out[31].IN1
cin => cin.IN1
out[0] <= add32:add_1.port3
out[1] <= add32:add_1.port3
out[2] <= add32:add_1.port3
out[3] <= add32:add_1.port3
out[4] <= add32:add_1.port3
out[5] <= add32:add_1.port3
out[6] <= add32:add_1.port3
out[7] <= add32:add_1.port3
out[8] <= add32:add_1.port3
out[9] <= add32:add_1.port3
out[10] <= add32:add_1.port3
out[11] <= add32:add_1.port3
out[12] <= add32:add_1.port3
out[13] <= add32:add_1.port3
out[14] <= add32:add_1.port3
out[15] <= add32:add_1.port3
out[16] <= add32:add_1.port3
out[17] <= add32:add_1.port3
out[18] <= add32:add_1.port3
out[19] <= add32:add_1.port3
out[20] <= add32:add_1.port3
out[21] <= add32:add_1.port3
out[22] <= add32:add_1.port3
out[23] <= add32:add_1.port3
out[24] <= add32:add_1.port3
out[25] <= add32:add_1.port3
out[26] <= add32:add_1.port3
out[27] <= add32:add_1.port3
out[28] <= add32:add_1.port3
out[29] <= add32:add_1.port3
out[30] <= add32:add_1.port3
out[31] <= add32:add_1.port3
ccout <= <GND>


|alu32|sub32:sub0|add32:add_10
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
b[16] => b[16].IN1
b[17] => b[17].IN1
b[18] => b[18].IN1
b[19] => b[19].IN1
b[20] => b[20].IN1
b[21] => b[21].IN1
b[22] => b[22].IN1
b[23] => b[23].IN1
b[24] => b[24].IN1
b[25] => b[25].IN1
b[26] => b[26].IN1
b[27] => b[27].IN1
b[28] => b[28].IN1
b[29] => b[29].IN1
b[30] => b[30].IN1
b[31] => b[31].IN1
cin => ~NO_FANOUT~
out[0] <= full_adder:fa1.port3
out[1] <= full_adder:fa2.port3
out[2] <= full_adder:fa3.port3
out[3] <= full_adder:fa4.port3
out[4] <= full_adder:fa5.port3
out[5] <= full_adder:fa6.port3
out[6] <= full_adder:fa7.port3
out[7] <= full_adder:fa8.port3
out[8] <= full_adder:fa9.port3
out[9] <= full_adder:fa10.port3
out[10] <= full_adder:fa20.port3
out[11] <= full_adder:fa30.port3
out[12] <= full_adder:fa40.port3
out[13] <= full_adder:fa50.port3
out[14] <= full_adder:fa60.port3
out[15] <= full_adder:fa70.port3
out[16] <= full_adder:fa80.port3
out[17] <= full_adder:fa90.port3
out[18] <= full_adder:fa100.port3
out[19] <= full_adder:fa200.port3
out[20] <= full_adder:fa300.port3
out[21] <= full_adder:fa400.port3
out[22] <= full_adder:fa500.port3
out[23] <= full_adder:fa600.port3
out[24] <= full_adder:fa700.port3
out[25] <= full_adder:fa800.port3
out[26] <= full_adder:fa900.port3
out[27] <= full_adder:fa1000.port3
out[28] <= full_adder:fa2000.port3
out[29] <= full_adder:fa3000.port3
out[30] <= full_adder:fa4000.port3
out[31] <= full_adder:fa5000.port3
cout <= <GND>


|alu32|sub32:sub0|add32:add_10|full_adder:fa1
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa2
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa3
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa4
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa5
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa6
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa7
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa8
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa9
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa10
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa20
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa30
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa40
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa50
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa60
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa70
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa80
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa90
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa100
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa200
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa300
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa400
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa500
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa600
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa700
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa800
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa900
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa1000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa2000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa3000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa4000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_10|full_adder:fa5000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
b[16] => b[16].IN1
b[17] => b[17].IN1
b[18] => b[18].IN1
b[19] => b[19].IN1
b[20] => b[20].IN1
b[21] => b[21].IN1
b[22] => b[22].IN1
b[23] => b[23].IN1
b[24] => b[24].IN1
b[25] => b[25].IN1
b[26] => b[26].IN1
b[27] => b[27].IN1
b[28] => b[28].IN1
b[29] => b[29].IN1
b[30] => b[30].IN1
b[31] => b[31].IN1
cin => ~NO_FANOUT~
out[0] <= full_adder:fa1.port3
out[1] <= full_adder:fa2.port3
out[2] <= full_adder:fa3.port3
out[3] <= full_adder:fa4.port3
out[4] <= full_adder:fa5.port3
out[5] <= full_adder:fa6.port3
out[6] <= full_adder:fa7.port3
out[7] <= full_adder:fa8.port3
out[8] <= full_adder:fa9.port3
out[9] <= full_adder:fa10.port3
out[10] <= full_adder:fa20.port3
out[11] <= full_adder:fa30.port3
out[12] <= full_adder:fa40.port3
out[13] <= full_adder:fa50.port3
out[14] <= full_adder:fa60.port3
out[15] <= full_adder:fa70.port3
out[16] <= full_adder:fa80.port3
out[17] <= full_adder:fa90.port3
out[18] <= full_adder:fa100.port3
out[19] <= full_adder:fa200.port3
out[20] <= full_adder:fa300.port3
out[21] <= full_adder:fa400.port3
out[22] <= full_adder:fa500.port3
out[23] <= full_adder:fa600.port3
out[24] <= full_adder:fa700.port3
out[25] <= full_adder:fa800.port3
out[26] <= full_adder:fa900.port3
out[27] <= full_adder:fa1000.port3
out[28] <= full_adder:fa2000.port3
out[29] <= full_adder:fa3000.port3
out[30] <= full_adder:fa4000.port3
out[31] <= full_adder:fa5000.port3
cout <= <GND>


|alu32|sub32:sub0|add32:add_1|full_adder:fa1
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa2
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa3
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa4
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa5
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa6
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa7
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa8
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa9
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa10
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa20
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa30
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa40
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa50
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa60
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa70
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa80
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa90
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa100
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa200
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa300
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa400
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa500
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa600
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa700
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa800
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa900
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa1000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa2000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa3000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa4000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|sub32:sub0|add32:add_1|full_adder:fa5000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mult32:mult0
clock => clock.IN2
reset => reset.IN1
multiplicand[0] => multiplicand[0].IN1
multiplicand[1] => multiplicand[1].IN1
multiplicand[2] => multiplicand[2].IN1
multiplicand[3] => multiplicand[3].IN1
multiplicand[4] => multiplicand[4].IN1
multiplicand[5] => multiplicand[5].IN1
multiplicand[6] => multiplicand[6].IN1
multiplicand[7] => multiplicand[7].IN1
multiplicand[8] => multiplicand[8].IN1
multiplicand[9] => multiplicand[9].IN1
multiplicand[10] => multiplicand[10].IN1
multiplicand[11] => multiplicand[11].IN1
multiplicand[12] => multiplicand[12].IN1
multiplicand[13] => multiplicand[13].IN1
multiplicand[14] => multiplicand[14].IN1
multiplicand[15] => multiplicand[15].IN1
multiplicand[16] => multiplicand[16].IN1
multiplicand[17] => multiplicand[17].IN1
multiplicand[18] => multiplicand[18].IN1
multiplicand[19] => multiplicand[19].IN1
multiplicand[20] => multiplicand[20].IN1
multiplicand[21] => multiplicand[21].IN1
multiplicand[22] => multiplicand[22].IN1
multiplicand[23] => multiplicand[23].IN1
multiplicand[24] => multiplicand[24].IN1
multiplicand[25] => multiplicand[25].IN1
multiplicand[26] => multiplicand[26].IN1
multiplicand[27] => multiplicand[27].IN1
multiplicand[28] => multiplicand[28].IN1
multiplicand[29] => multiplicand[29].IN1
multiplicand[30] => multiplicand[30].IN1
multiplicand[31] => multiplicand[31].IN1
multiplier[0] => multiplier[0].IN1
multiplier[1] => multiplier[1].IN1
multiplier[2] => multiplier[2].IN1
multiplier[3] => multiplier[3].IN1
multiplier[4] => multiplier[4].IN1
multiplier[5] => multiplier[5].IN1
multiplier[6] => multiplier[6].IN1
multiplier[7] => multiplier[7].IN1
multiplier[8] => multiplier[8].IN1
multiplier[9] => multiplier[9].IN1
multiplier[10] => multiplier[10].IN1
multiplier[11] => multiplier[11].IN1
multiplier[12] => multiplier[12].IN1
multiplier[13] => multiplier[13].IN1
multiplier[14] => multiplier[14].IN1
multiplier[15] => multiplier[15].IN1
multiplier[16] => multiplier[16].IN1
multiplier[17] => multiplier[17].IN1
multiplier[18] => multiplier[18].IN1
multiplier[19] => multiplier[19].IN1
multiplier[20] => multiplier[20].IN1
multiplier[21] => multiplier[21].IN1
multiplier[22] => multiplier[22].IN1
multiplier[23] => multiplier[23].IN1
multiplier[24] => multiplier[24].IN1
multiplier[25] => multiplier[25].IN1
multiplier[26] => multiplier[26].IN1
multiplier[27] => multiplier[27].IN1
multiplier[28] => multiplier[28].IN1
multiplier[29] => multiplier[29].IN1
multiplier[30] => multiplier[30].IN1
multiplier[31] => multiplier[31].IN1
product[0] <= product[0].DB_MAX_OUTPUT_PORT_TYPE
product[1] <= datapath:dp0.product
product[2] <= datapath:dp0.product
product[3] <= datapath:dp0.product
product[4] <= datapath:dp0.product
product[5] <= datapath:dp0.product
product[6] <= datapath:dp0.product
product[7] <= datapath:dp0.product
product[8] <= datapath:dp0.product
product[9] <= datapath:dp0.product
product[10] <= datapath:dp0.product
product[11] <= datapath:dp0.product
product[12] <= datapath:dp0.product
product[13] <= datapath:dp0.product
product[14] <= datapath:dp0.product
product[15] <= datapath:dp0.product
product[16] <= datapath:dp0.product
product[17] <= datapath:dp0.product
product[18] <= datapath:dp0.product
product[19] <= datapath:dp0.product
product[20] <= datapath:dp0.product
product[21] <= datapath:dp0.product
product[22] <= datapath:dp0.product
product[23] <= datapath:dp0.product
product[24] <= datapath:dp0.product
product[25] <= datapath:dp0.product
product[26] <= datapath:dp0.product
product[27] <= datapath:dp0.product
product[28] <= datapath:dp0.product
product[29] <= datapath:dp0.product
product[30] <= datapath:dp0.product
product[31] <= datapath:dp0.product
product[32] <= datapath:dp0.product
product[33] <= datapath:dp0.product
product[34] <= datapath:dp0.product
product[35] <= datapath:dp0.product
product[36] <= datapath:dp0.product
product[37] <= datapath:dp0.product
product[38] <= datapath:dp0.product
product[39] <= datapath:dp0.product
product[40] <= datapath:dp0.product
product[41] <= datapath:dp0.product
product[42] <= datapath:dp0.product
product[43] <= datapath:dp0.product
product[44] <= datapath:dp0.product
product[45] <= datapath:dp0.product
product[46] <= datapath:dp0.product
product[47] <= datapath:dp0.product
product[48] <= datapath:dp0.product
product[49] <= datapath:dp0.product
product[50] <= datapath:dp0.product
product[51] <= datapath:dp0.product
product[52] <= datapath:dp0.product
product[53] <= datapath:dp0.product
product[54] <= datapath:dp0.product
product[55] <= datapath:dp0.product
product[56] <= datapath:dp0.product
product[57] <= datapath:dp0.product
product[58] <= datapath:dp0.product
product[59] <= datapath:dp0.product
product[60] <= datapath:dp0.product
product[61] <= datapath:dp0.product
product[62] <= datapath:dp0.product
product[63] <= datapath:dp0.product


|alu32|mult32:mult0|control:c0
clock => current_state~1.DATAIN
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.START.DATAIN
finished => next_state.OUTPUTSELECT
finished => next_state.OUTPUTSELECT
finished => Selector0.IN3
product0 => next_state.DATAA
product0 => next_state.DATAA
select_initial <= select_initial.DB_MAX_OUTPUT_PORT_TYPE
select_add <= select_add.DB_MAX_OUTPUT_PORT_TYPE
select_shift <= select_shift.DB_MAX_OUTPUT_PORT_TYPE
select_counter_increment <= select_shift.DB_MAX_OUTPUT_PORT_TYPE
write_product <= WideNor0.DB_MAX_OUTPUT_PORT_TYPE
write_counter <= reg_write_counter.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mult32:mult0|datapath:dp0
clock => counter[0].CLK
clock => counter[1].CLK
clock => counter[2].CLK
clock => counter[3].CLK
clock => counter[4].CLK
clock => counter[5].CLK
clock => reg_product[0].CLK
clock => reg_product[1].CLK
clock => reg_product[2].CLK
clock => reg_product[3].CLK
clock => reg_product[4].CLK
clock => reg_product[5].CLK
clock => reg_product[6].CLK
clock => reg_product[7].CLK
clock => reg_product[8].CLK
clock => reg_product[9].CLK
clock => reg_product[10].CLK
clock => reg_product[11].CLK
clock => reg_product[12].CLK
clock => reg_product[13].CLK
clock => reg_product[14].CLK
clock => reg_product[15].CLK
clock => reg_product[16].CLK
clock => reg_product[17].CLK
clock => reg_product[18].CLK
clock => reg_product[19].CLK
clock => reg_product[20].CLK
clock => reg_product[21].CLK
clock => reg_product[22].CLK
clock => reg_product[23].CLK
clock => reg_product[24].CLK
clock => reg_product[25].CLK
clock => reg_product[26].CLK
clock => reg_product[27].CLK
clock => reg_product[28].CLK
clock => reg_product[29].CLK
clock => reg_product[30].CLK
clock => reg_product[31].CLK
clock => reg_product[32].CLK
clock => reg_product[33].CLK
clock => reg_product[34].CLK
clock => reg_product[35].CLK
clock => reg_product[36].CLK
clock => reg_product[37].CLK
clock => reg_product[38].CLK
clock => reg_product[39].CLK
clock => reg_product[40].CLK
clock => reg_product[41].CLK
clock => reg_product[42].CLK
clock => reg_product[43].CLK
clock => reg_product[44].CLK
clock => reg_product[45].CLK
clock => reg_product[46].CLK
clock => reg_product[47].CLK
clock => reg_product[48].CLK
clock => reg_product[49].CLK
clock => reg_product[50].CLK
clock => reg_product[51].CLK
clock => reg_product[52].CLK
clock => reg_product[53].CLK
clock => reg_product[54].CLK
clock => reg_product[55].CLK
clock => reg_product[56].CLK
clock => reg_product[57].CLK
clock => reg_product[58].CLK
clock => reg_product[59].CLK
clock => reg_product[60].CLK
clock => reg_product[61].CLK
clock => reg_product[62].CLK
clock => reg_product[63].CLK
select_initial => product_in[63].OUTPUTSELECT
select_initial => product_in[62].OUTPUTSELECT
select_initial => product_in[61].OUTPUTSELECT
select_initial => product_in[60].OUTPUTSELECT
select_initial => product_in[59].OUTPUTSELECT
select_initial => product_in[58].OUTPUTSELECT
select_initial => product_in[57].OUTPUTSELECT
select_initial => product_in[56].OUTPUTSELECT
select_initial => product_in[55].OUTPUTSELECT
select_initial => product_in[54].OUTPUTSELECT
select_initial => product_in[53].OUTPUTSELECT
select_initial => product_in[52].OUTPUTSELECT
select_initial => product_in[51].OUTPUTSELECT
select_initial => product_in[50].OUTPUTSELECT
select_initial => product_in[49].OUTPUTSELECT
select_initial => product_in[48].OUTPUTSELECT
select_initial => product_in[47].OUTPUTSELECT
select_initial => product_in[46].OUTPUTSELECT
select_initial => product_in[45].OUTPUTSELECT
select_initial => product_in[44].OUTPUTSELECT
select_initial => product_in[43].OUTPUTSELECT
select_initial => product_in[42].OUTPUTSELECT
select_initial => product_in[41].OUTPUTSELECT
select_initial => product_in[40].OUTPUTSELECT
select_initial => product_in[39].OUTPUTSELECT
select_initial => product_in[38].OUTPUTSELECT
select_initial => product_in[37].OUTPUTSELECT
select_initial => product_in[36].OUTPUTSELECT
select_initial => product_in[35].OUTPUTSELECT
select_initial => product_in[34].OUTPUTSELECT
select_initial => product_in[33].OUTPUTSELECT
select_initial => product_in[32].OUTPUTSELECT
select_initial => product_in[31].OUTPUTSELECT
select_initial => product_in[30].OUTPUTSELECT
select_initial => product_in[29].OUTPUTSELECT
select_initial => product_in[28].OUTPUTSELECT
select_initial => product_in[27].OUTPUTSELECT
select_initial => product_in[26].OUTPUTSELECT
select_initial => product_in[25].OUTPUTSELECT
select_initial => product_in[24].OUTPUTSELECT
select_initial => product_in[23].OUTPUTSELECT
select_initial => product_in[22].OUTPUTSELECT
select_initial => product_in[21].OUTPUTSELECT
select_initial => product_in[20].OUTPUTSELECT
select_initial => product_in[19].OUTPUTSELECT
select_initial => product_in[18].OUTPUTSELECT
select_initial => product_in[17].OUTPUTSELECT
select_initial => product_in[16].OUTPUTSELECT
select_initial => product_in[15].OUTPUTSELECT
select_initial => product_in[14].OUTPUTSELECT
select_initial => product_in[13].OUTPUTSELECT
select_initial => product_in[12].OUTPUTSELECT
select_initial => product_in[11].OUTPUTSELECT
select_initial => product_in[10].OUTPUTSELECT
select_initial => product_in[9].OUTPUTSELECT
select_initial => product_in[8].OUTPUTSELECT
select_initial => product_in[7].OUTPUTSELECT
select_initial => product_in[6].OUTPUTSELECT
select_initial => product_in[5].OUTPUTSELECT
select_initial => product_in[4].OUTPUTSELECT
select_initial => product_in[3].OUTPUTSELECT
select_initial => product_in[2].OUTPUTSELECT
select_initial => product_in[1].OUTPUTSELECT
select_initial => product_in[0].OUTPUTSELECT
select_add => mux_add[63].OUTPUTSELECT
select_add => mux_add[62].OUTPUTSELECT
select_add => mux_add[61].OUTPUTSELECT
select_add => mux_add[60].OUTPUTSELECT
select_add => mux_add[59].OUTPUTSELECT
select_add => mux_add[58].OUTPUTSELECT
select_add => mux_add[57].OUTPUTSELECT
select_add => mux_add[56].OUTPUTSELECT
select_add => mux_add[55].OUTPUTSELECT
select_add => mux_add[54].OUTPUTSELECT
select_add => mux_add[53].OUTPUTSELECT
select_add => mux_add[52].OUTPUTSELECT
select_add => mux_add[51].OUTPUTSELECT
select_add => mux_add[50].OUTPUTSELECT
select_add => mux_add[49].OUTPUTSELECT
select_add => mux_add[48].OUTPUTSELECT
select_add => mux_add[47].OUTPUTSELECT
select_add => mux_add[46].OUTPUTSELECT
select_add => mux_add[45].OUTPUTSELECT
select_add => mux_add[44].OUTPUTSELECT
select_add => mux_add[43].OUTPUTSELECT
select_add => mux_add[42].OUTPUTSELECT
select_add => mux_add[41].OUTPUTSELECT
select_add => mux_add[40].OUTPUTSELECT
select_add => mux_add[39].OUTPUTSELECT
select_add => mux_add[38].OUTPUTSELECT
select_add => mux_add[37].OUTPUTSELECT
select_add => mux_add[36].OUTPUTSELECT
select_add => mux_add[35].OUTPUTSELECT
select_add => mux_add[34].OUTPUTSELECT
select_add => mux_add[33].OUTPUTSELECT
select_add => mux_add[32].OUTPUTSELECT
select_add => mux_add[31].OUTPUTSELECT
select_add => mux_add[30].OUTPUTSELECT
select_add => mux_add[29].OUTPUTSELECT
select_add => mux_add[28].OUTPUTSELECT
select_add => mux_add[27].OUTPUTSELECT
select_add => mux_add[26].OUTPUTSELECT
select_add => mux_add[25].OUTPUTSELECT
select_add => mux_add[24].OUTPUTSELECT
select_add => mux_add[23].OUTPUTSELECT
select_add => mux_add[22].OUTPUTSELECT
select_add => mux_add[21].OUTPUTSELECT
select_add => mux_add[20].OUTPUTSELECT
select_add => mux_add[19].OUTPUTSELECT
select_add => mux_add[18].OUTPUTSELECT
select_add => mux_add[17].OUTPUTSELECT
select_add => mux_add[16].OUTPUTSELECT
select_add => mux_add[15].OUTPUTSELECT
select_add => mux_add[14].OUTPUTSELECT
select_add => mux_add[13].OUTPUTSELECT
select_add => mux_add[12].OUTPUTSELECT
select_add => mux_add[11].OUTPUTSELECT
select_add => mux_add[10].OUTPUTSELECT
select_add => mux_add[9].OUTPUTSELECT
select_add => mux_add[8].OUTPUTSELECT
select_add => mux_add[7].OUTPUTSELECT
select_add => mux_add[6].OUTPUTSELECT
select_add => mux_add[5].OUTPUTSELECT
select_add => mux_add[4].OUTPUTSELECT
select_add => mux_add[3].OUTPUTSELECT
select_add => mux_add[2].OUTPUTSELECT
select_add => mux_add[1].OUTPUTSELECT
select_add => mux_add[0].OUTPUTSELECT
select_shift => mux_shift[63].OUTPUTSELECT
select_shift => mux_shift[62].OUTPUTSELECT
select_shift => mux_shift[61].OUTPUTSELECT
select_shift => mux_shift[60].OUTPUTSELECT
select_shift => mux_shift[59].OUTPUTSELECT
select_shift => mux_shift[58].OUTPUTSELECT
select_shift => mux_shift[57].OUTPUTSELECT
select_shift => mux_shift[56].OUTPUTSELECT
select_shift => mux_shift[55].OUTPUTSELECT
select_shift => mux_shift[54].OUTPUTSELECT
select_shift => mux_shift[53].OUTPUTSELECT
select_shift => mux_shift[52].OUTPUTSELECT
select_shift => mux_shift[51].OUTPUTSELECT
select_shift => mux_shift[50].OUTPUTSELECT
select_shift => mux_shift[49].OUTPUTSELECT
select_shift => mux_shift[48].OUTPUTSELECT
select_shift => mux_shift[47].OUTPUTSELECT
select_shift => mux_shift[46].OUTPUTSELECT
select_shift => mux_shift[45].OUTPUTSELECT
select_shift => mux_shift[44].OUTPUTSELECT
select_shift => mux_shift[43].OUTPUTSELECT
select_shift => mux_shift[42].OUTPUTSELECT
select_shift => mux_shift[41].OUTPUTSELECT
select_shift => mux_shift[40].OUTPUTSELECT
select_shift => mux_shift[39].OUTPUTSELECT
select_shift => mux_shift[38].OUTPUTSELECT
select_shift => mux_shift[37].OUTPUTSELECT
select_shift => mux_shift[36].OUTPUTSELECT
select_shift => mux_shift[35].OUTPUTSELECT
select_shift => mux_shift[34].OUTPUTSELECT
select_shift => mux_shift[33].OUTPUTSELECT
select_shift => mux_shift[32].OUTPUTSELECT
select_shift => mux_shift[31].OUTPUTSELECT
select_shift => mux_shift[30].OUTPUTSELECT
select_shift => mux_shift[29].OUTPUTSELECT
select_shift => mux_shift[28].OUTPUTSELECT
select_shift => mux_shift[27].OUTPUTSELECT
select_shift => mux_shift[26].OUTPUTSELECT
select_shift => mux_shift[25].OUTPUTSELECT
select_shift => mux_shift[24].OUTPUTSELECT
select_shift => mux_shift[23].OUTPUTSELECT
select_shift => mux_shift[22].OUTPUTSELECT
select_shift => mux_shift[21].OUTPUTSELECT
select_shift => mux_shift[20].OUTPUTSELECT
select_shift => mux_shift[19].OUTPUTSELECT
select_shift => mux_shift[18].OUTPUTSELECT
select_shift => mux_shift[17].OUTPUTSELECT
select_shift => mux_shift[16].OUTPUTSELECT
select_shift => mux_shift[15].OUTPUTSELECT
select_shift => mux_shift[14].OUTPUTSELECT
select_shift => mux_shift[13].OUTPUTSELECT
select_shift => mux_shift[12].OUTPUTSELECT
select_shift => mux_shift[11].OUTPUTSELECT
select_shift => mux_shift[10].OUTPUTSELECT
select_shift => mux_shift[9].OUTPUTSELECT
select_shift => mux_shift[8].OUTPUTSELECT
select_shift => mux_shift[7].OUTPUTSELECT
select_shift => mux_shift[6].OUTPUTSELECT
select_shift => mux_shift[5].OUTPUTSELECT
select_shift => mux_shift[4].OUTPUTSELECT
select_shift => mux_shift[3].OUTPUTSELECT
select_shift => mux_shift[2].OUTPUTSELECT
select_shift => mux_shift[1].OUTPUTSELECT
select_shift => mux_shift[0].OUTPUTSELECT
select_counter_increment => counter_in[5].OUTPUTSELECT
select_counter_increment => counter_in[4].OUTPUTSELECT
select_counter_increment => counter_in[3].OUTPUTSELECT
select_counter_increment => counter_in[2].OUTPUTSELECT
select_counter_increment => counter_in[1].OUTPUTSELECT
select_counter_increment => counter_in[0].OUTPUTSELECT
write_product => reg_product[0].ENA
write_product => reg_product[1].ENA
write_product => reg_product[2].ENA
write_product => reg_product[3].ENA
write_product => reg_product[4].ENA
write_product => reg_product[5].ENA
write_product => reg_product[6].ENA
write_product => reg_product[7].ENA
write_product => reg_product[8].ENA
write_product => reg_product[9].ENA
write_product => reg_product[10].ENA
write_product => reg_product[11].ENA
write_product => reg_product[12].ENA
write_product => reg_product[13].ENA
write_product => reg_product[14].ENA
write_product => reg_product[15].ENA
write_product => reg_product[16].ENA
write_product => reg_product[17].ENA
write_product => reg_product[18].ENA
write_product => reg_product[19].ENA
write_product => reg_product[20].ENA
write_product => reg_product[21].ENA
write_product => reg_product[22].ENA
write_product => reg_product[23].ENA
write_product => reg_product[24].ENA
write_product => reg_product[25].ENA
write_product => reg_product[26].ENA
write_product => reg_product[27].ENA
write_product => reg_product[28].ENA
write_product => reg_product[29].ENA
write_product => reg_product[30].ENA
write_product => reg_product[31].ENA
write_product => reg_product[32].ENA
write_product => reg_product[33].ENA
write_product => reg_product[34].ENA
write_product => reg_product[35].ENA
write_product => reg_product[36].ENA
write_product => reg_product[37].ENA
write_product => reg_product[38].ENA
write_product => reg_product[39].ENA
write_product => reg_product[40].ENA
write_product => reg_product[41].ENA
write_product => reg_product[42].ENA
write_product => reg_product[43].ENA
write_product => reg_product[44].ENA
write_product => reg_product[45].ENA
write_product => reg_product[46].ENA
write_product => reg_product[47].ENA
write_product => reg_product[48].ENA
write_product => reg_product[49].ENA
write_product => reg_product[50].ENA
write_product => reg_product[51].ENA
write_product => reg_product[52].ENA
write_product => reg_product[53].ENA
write_product => reg_product[54].ENA
write_product => reg_product[55].ENA
write_product => reg_product[56].ENA
write_product => reg_product[57].ENA
write_product => reg_product[58].ENA
write_product => reg_product[59].ENA
write_product => reg_product[60].ENA
write_product => reg_product[61].ENA
write_product => reg_product[62].ENA
write_product => reg_product[63].ENA
write_counter => counter[0].ENA
write_counter => counter[1].ENA
write_counter => counter[2].ENA
write_counter => counter[3].ENA
write_counter => counter[4].ENA
write_counter => counter[5].ENA
multiplier[0] => product_in[0].DATAB
multiplier[1] => product_in[1].DATAB
multiplier[2] => product_in[2].DATAB
multiplier[3] => product_in[3].DATAB
multiplier[4] => product_in[4].DATAB
multiplier[5] => product_in[5].DATAB
multiplier[6] => product_in[6].DATAB
multiplier[7] => product_in[7].DATAB
multiplier[8] => product_in[8].DATAB
multiplier[9] => product_in[9].DATAB
multiplier[10] => product_in[10].DATAB
multiplier[11] => product_in[11].DATAB
multiplier[12] => product_in[12].DATAB
multiplier[13] => product_in[13].DATAB
multiplier[14] => product_in[14].DATAB
multiplier[15] => product_in[15].DATAB
multiplier[16] => product_in[16].DATAB
multiplier[17] => product_in[17].DATAB
multiplier[18] => product_in[18].DATAB
multiplier[19] => product_in[19].DATAB
multiplier[20] => product_in[20].DATAB
multiplier[21] => product_in[21].DATAB
multiplier[22] => product_in[22].DATAB
multiplier[23] => product_in[23].DATAB
multiplier[24] => product_in[24].DATAB
multiplier[25] => product_in[25].DATAB
multiplier[26] => product_in[26].DATAB
multiplier[27] => product_in[27].DATAB
multiplier[28] => product_in[28].DATAB
multiplier[29] => product_in[29].DATAB
multiplier[30] => product_in[30].DATAB
multiplier[31] => product_in[31].DATAB
multiplicand[0] => Add1.IN32
multiplicand[1] => Add1.IN31
multiplicand[2] => Add1.IN30
multiplicand[3] => Add1.IN29
multiplicand[4] => Add1.IN28
multiplicand[5] => Add1.IN27
multiplicand[6] => Add1.IN26
multiplicand[7] => Add1.IN25
multiplicand[8] => Add1.IN24
multiplicand[9] => Add1.IN23
multiplicand[10] => Add1.IN22
multiplicand[11] => Add1.IN21
multiplicand[12] => Add1.IN20
multiplicand[13] => Add1.IN19
multiplicand[14] => Add1.IN18
multiplicand[15] => Add1.IN17
multiplicand[16] => Add1.IN16
multiplicand[17] => Add1.IN15
multiplicand[18] => Add1.IN14
multiplicand[19] => Add1.IN13
multiplicand[20] => Add1.IN12
multiplicand[21] => Add1.IN11
multiplicand[22] => Add1.IN10
multiplicand[23] => Add1.IN9
multiplicand[24] => Add1.IN8
multiplicand[25] => Add1.IN7
multiplicand[26] => Add1.IN6
multiplicand[27] => Add1.IN5
multiplicand[28] => Add1.IN4
multiplicand[29] => Add1.IN3
multiplicand[30] => Add1.IN2
multiplicand[31] => Add1.IN1
finished <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE
product[0] <= reg_product[0].DB_MAX_OUTPUT_PORT_TYPE
product[1] <= reg_product[1].DB_MAX_OUTPUT_PORT_TYPE
product[2] <= reg_product[2].DB_MAX_OUTPUT_PORT_TYPE
product[3] <= reg_product[3].DB_MAX_OUTPUT_PORT_TYPE
product[4] <= reg_product[4].DB_MAX_OUTPUT_PORT_TYPE
product[5] <= reg_product[5].DB_MAX_OUTPUT_PORT_TYPE
product[6] <= reg_product[6].DB_MAX_OUTPUT_PORT_TYPE
product[7] <= reg_product[7].DB_MAX_OUTPUT_PORT_TYPE
product[8] <= reg_product[8].DB_MAX_OUTPUT_PORT_TYPE
product[9] <= reg_product[9].DB_MAX_OUTPUT_PORT_TYPE
product[10] <= reg_product[10].DB_MAX_OUTPUT_PORT_TYPE
product[11] <= reg_product[11].DB_MAX_OUTPUT_PORT_TYPE
product[12] <= reg_product[12].DB_MAX_OUTPUT_PORT_TYPE
product[13] <= reg_product[13].DB_MAX_OUTPUT_PORT_TYPE
product[14] <= reg_product[14].DB_MAX_OUTPUT_PORT_TYPE
product[15] <= reg_product[15].DB_MAX_OUTPUT_PORT_TYPE
product[16] <= reg_product[16].DB_MAX_OUTPUT_PORT_TYPE
product[17] <= reg_product[17].DB_MAX_OUTPUT_PORT_TYPE
product[18] <= reg_product[18].DB_MAX_OUTPUT_PORT_TYPE
product[19] <= reg_product[19].DB_MAX_OUTPUT_PORT_TYPE
product[20] <= reg_product[20].DB_MAX_OUTPUT_PORT_TYPE
product[21] <= reg_product[21].DB_MAX_OUTPUT_PORT_TYPE
product[22] <= reg_product[22].DB_MAX_OUTPUT_PORT_TYPE
product[23] <= reg_product[23].DB_MAX_OUTPUT_PORT_TYPE
product[24] <= reg_product[24].DB_MAX_OUTPUT_PORT_TYPE
product[25] <= reg_product[25].DB_MAX_OUTPUT_PORT_TYPE
product[26] <= reg_product[26].DB_MAX_OUTPUT_PORT_TYPE
product[27] <= reg_product[27].DB_MAX_OUTPUT_PORT_TYPE
product[28] <= reg_product[28].DB_MAX_OUTPUT_PORT_TYPE
product[29] <= reg_product[29].DB_MAX_OUTPUT_PORT_TYPE
product[30] <= reg_product[30].DB_MAX_OUTPUT_PORT_TYPE
product[31] <= reg_product[31].DB_MAX_OUTPUT_PORT_TYPE
product[32] <= reg_product[32].DB_MAX_OUTPUT_PORT_TYPE
product[33] <= reg_product[33].DB_MAX_OUTPUT_PORT_TYPE
product[34] <= reg_product[34].DB_MAX_OUTPUT_PORT_TYPE
product[35] <= reg_product[35].DB_MAX_OUTPUT_PORT_TYPE
product[36] <= reg_product[36].DB_MAX_OUTPUT_PORT_TYPE
product[37] <= reg_product[37].DB_MAX_OUTPUT_PORT_TYPE
product[38] <= reg_product[38].DB_MAX_OUTPUT_PORT_TYPE
product[39] <= reg_product[39].DB_MAX_OUTPUT_PORT_TYPE
product[40] <= reg_product[40].DB_MAX_OUTPUT_PORT_TYPE
product[41] <= reg_product[41].DB_MAX_OUTPUT_PORT_TYPE
product[42] <= reg_product[42].DB_MAX_OUTPUT_PORT_TYPE
product[43] <= reg_product[43].DB_MAX_OUTPUT_PORT_TYPE
product[44] <= reg_product[44].DB_MAX_OUTPUT_PORT_TYPE
product[45] <= reg_product[45].DB_MAX_OUTPUT_PORT_TYPE
product[46] <= reg_product[46].DB_MAX_OUTPUT_PORT_TYPE
product[47] <= reg_product[47].DB_MAX_OUTPUT_PORT_TYPE
product[48] <= reg_product[48].DB_MAX_OUTPUT_PORT_TYPE
product[49] <= reg_product[49].DB_MAX_OUTPUT_PORT_TYPE
product[50] <= reg_product[50].DB_MAX_OUTPUT_PORT_TYPE
product[51] <= reg_product[51].DB_MAX_OUTPUT_PORT_TYPE
product[52] <= reg_product[52].DB_MAX_OUTPUT_PORT_TYPE
product[53] <= reg_product[53].DB_MAX_OUTPUT_PORT_TYPE
product[54] <= reg_product[54].DB_MAX_OUTPUT_PORT_TYPE
product[55] <= reg_product[55].DB_MAX_OUTPUT_PORT_TYPE
product[56] <= reg_product[56].DB_MAX_OUTPUT_PORT_TYPE
product[57] <= reg_product[57].DB_MAX_OUTPUT_PORT_TYPE
product[58] <= reg_product[58].DB_MAX_OUTPUT_PORT_TYPE
product[59] <= reg_product[59].DB_MAX_OUTPUT_PORT_TYPE
product[60] <= reg_product[60].DB_MAX_OUTPUT_PORT_TYPE
product[61] <= reg_product[61].DB_MAX_OUTPUT_PORT_TYPE
product[62] <= reg_product[62].DB_MAX_OUTPUT_PORT_TYPE
product[63] <= reg_product[63].DB_MAX_OUTPUT_PORT_TYPE


|alu32|xor32:xor0
a[0] => xor_0.IN0
a[1] => xor_1.IN0
a[2] => xor_2.IN0
a[3] => xor_3.IN0
a[4] => xor_4.IN0
a[5] => xor_5.IN0
a[6] => xor_6.IN0
a[7] => xor_7.IN0
a[8] => xor_8.IN0
a[9] => xor_9.IN0
a[10] => xor_10.IN0
a[11] => xor_11.IN0
a[12] => xor_12.IN0
a[13] => xor_13.IN0
a[14] => xor_14.IN0
a[15] => xor_15.IN0
a[16] => xor_16.IN0
a[17] => xor_17.IN0
a[18] => xor_18.IN0
a[19] => xor_19.IN0
a[20] => xor_20.IN0
a[21] => xor_21.IN0
a[22] => xor_22.IN0
a[23] => xor_23.IN0
a[24] => xor_24.IN0
a[25] => xor_25.IN0
a[26] => xor_26.IN0
a[27] => xor_27.IN0
a[28] => xor_28.IN0
a[29] => xor_29.IN0
a[30] => xor_30.IN0
a[31] => xor_31.IN0
b[0] => xor_0.IN1
b[1] => xor_1.IN1
b[2] => xor_2.IN1
b[3] => xor_3.IN1
b[4] => xor_4.IN1
b[5] => xor_5.IN1
b[6] => xor_6.IN1
b[7] => xor_7.IN1
b[8] => xor_8.IN1
b[9] => xor_9.IN1
b[10] => xor_10.IN1
b[11] => xor_11.IN1
b[12] => xor_12.IN1
b[13] => xor_13.IN1
b[14] => xor_14.IN1
b[15] => xor_15.IN1
b[16] => xor_16.IN1
b[17] => xor_17.IN1
b[18] => xor_18.IN1
b[19] => xor_19.IN1
b[20] => xor_20.IN1
b[21] => xor_21.IN1
b[22] => xor_22.IN1
b[23] => xor_23.IN1
b[24] => xor_24.IN1
b[25] => xor_25.IN1
b[26] => xor_26.IN1
b[27] => xor_27.IN1
b[28] => xor_28.IN1
b[29] => xor_29.IN1
b[30] => xor_30.IN1
b[31] => xor_31.IN1
out[0] <= xor_0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= xor_1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= xor_2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= xor_3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= xor_4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= xor_5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= xor_6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= xor_7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= xor_8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= xor_9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= xor_10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= xor_11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= xor_12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= xor_13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= xor_14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= xor_15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= xor_16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= xor_17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= xor_18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= xor_19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= xor_20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= xor_21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= xor_22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= xor_23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= xor_24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= xor_25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= xor_26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= xor_27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= xor_28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= xor_29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= xor_30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= xor_31.DB_MAX_OUTPUT_PORT_TYPE


|alu32|and32:and00
a[0] => and_0.IN0
a[1] => and_1.IN0
a[2] => and_2.IN0
a[3] => and_3.IN0
a[4] => and_4.IN0
a[5] => and_5.IN0
a[6] => and_6.IN0
a[7] => and_7.IN0
a[8] => and_8.IN0
a[9] => and_9.IN0
a[10] => and_10.IN0
a[11] => and_11.IN0
a[12] => and_12.IN0
a[13] => and_13.IN0
a[14] => and_14.IN0
a[15] => and_15.IN0
a[16] => and_16.IN0
a[17] => and_17.IN0
a[18] => and_18.IN0
a[19] => and_19.IN0
a[20] => and_20.IN0
a[21] => and_21.IN0
a[22] => and_22.IN0
a[23] => and_23.IN0
a[24] => and_24.IN0
a[25] => and_25.IN0
a[26] => and_26.IN0
a[27] => and_27.IN0
a[28] => and_28.IN0
a[29] => and_29.IN0
a[30] => and_30.IN0
a[31] => and_31.IN0
b[0] => and_0.IN1
b[1] => and_1.IN1
b[2] => and_2.IN1
b[3] => and_3.IN1
b[4] => and_4.IN1
b[5] => and_5.IN1
b[6] => and_6.IN1
b[7] => and_7.IN1
b[8] => and_8.IN1
b[9] => and_9.IN1
b[10] => and_10.IN1
b[11] => and_11.IN1
b[12] => and_12.IN1
b[13] => and_13.IN1
b[14] => and_14.IN1
b[15] => and_15.IN1
b[16] => and_16.IN1
b[17] => and_17.IN1
b[18] => and_18.IN1
b[19] => and_19.IN1
b[20] => and_20.IN1
b[21] => and_21.IN1
b[22] => and_22.IN1
b[23] => and_23.IN1
b[24] => and_24.IN1
b[25] => and_25.IN1
b[26] => and_26.IN1
b[27] => and_27.IN1
b[28] => and_28.IN1
b[29] => and_29.IN1
b[30] => and_30.IN1
b[31] => and_31.IN1
out[0] <= and_0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= and_1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= and_2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= and_3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= and_4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= and_5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= and_6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= and_7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= and_8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= and_9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= and_10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= and_11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= and_12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= and_13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= and_14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= and_15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= and_16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= and_17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= and_18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= and_19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= and_20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= and_21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= and_22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= and_23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= and_24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= and_25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= and_26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= and_27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= and_28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= and_29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= and_30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= and_31.DB_MAX_OUTPUT_PORT_TYPE


|alu32|or32:or0
a[0] => or_0.IN0
a[1] => or_1.IN0
a[2] => or_2.IN0
a[3] => or_3.IN0
a[4] => or_4.IN0
a[5] => or_5.IN0
a[6] => or_6.IN0
a[7] => or_7.IN0
a[8] => or_8.IN0
a[9] => or_9.IN0
a[10] => or_10.IN0
a[11] => or_11.IN0
a[12] => or_12.IN0
a[13] => or_13.IN0
a[14] => or_14.IN0
a[15] => or_15.IN0
a[16] => or_16.IN0
a[17] => or_17.IN0
a[18] => or_18.IN0
a[19] => or_19.IN0
a[20] => or_20.IN0
a[21] => or_21.IN0
a[22] => or_22.IN0
a[23] => or_23.IN0
a[24] => or_24.IN0
a[25] => or_25.IN0
a[26] => or_26.IN0
a[27] => or_27.IN0
a[28] => or_28.IN0
a[29] => or_29.IN0
a[30] => or_30.IN0
a[31] => or_31.IN0
b[0] => or_0.IN1
b[1] => or_1.IN1
b[2] => or_2.IN1
b[3] => or_3.IN1
b[4] => or_4.IN1
b[5] => or_5.IN1
b[6] => or_6.IN1
b[7] => or_7.IN1
b[8] => or_8.IN1
b[9] => or_9.IN1
b[10] => or_10.IN1
b[11] => or_11.IN1
b[12] => or_12.IN1
b[13] => or_13.IN1
b[14] => or_14.IN1
b[15] => or_15.IN1
b[16] => or_16.IN1
b[17] => or_17.IN1
b[18] => or_18.IN1
b[19] => or_19.IN1
b[20] => or_20.IN1
b[21] => or_21.IN1
b[22] => or_22.IN1
b[23] => or_23.IN1
b[24] => or_24.IN1
b[25] => or_25.IN1
b[26] => or_26.IN1
b[27] => or_27.IN1
b[28] => or_28.IN1
b[29] => or_29.IN1
b[30] => or_30.IN1
b[31] => or_31.IN1
out[0] <= or_0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= or_1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= or_2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= or_3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= or_4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= or_5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= or_6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= or_7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= or_8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= or_9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= or_10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= or_11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= or_12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= or_13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= or_14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= or_15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= or_16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= or_17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= or_18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= or_19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= or_20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= or_21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= or_22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= or_23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= or_24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= or_25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= or_26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= or_27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= or_28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= or_29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= or_30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= or_31.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
b[16] => b[16].IN1
b[17] => b[17].IN1
b[18] => b[18].IN1
b[19] => b[19].IN1
b[20] => b[20].IN1
b[21] => b[21].IN1
b[22] => b[22].IN1
b[23] => b[23].IN1
b[24] => b[24].IN1
b[25] => b[25].IN1
b[26] => b[26].IN1
b[27] => b[27].IN1
b[28] => b[28].IN1
b[29] => b[29].IN1
b[30] => b[30].IN1
b[31] => b[31].IN1
out[0] <= sub32:sub_1.port2
out[1] <= <GND>
out[2] <= <GND>
out[3] <= <GND>
out[4] <= <GND>
out[5] <= <GND>
out[6] <= <GND>
out[7] <= <GND>
out[8] <= <GND>
out[9] <= <GND>
out[10] <= <GND>
out[11] <= <GND>
out[12] <= <GND>
out[13] <= <GND>
out[14] <= <GND>
out[15] <= <GND>
out[16] <= <GND>
out[17] <= <GND>
out[18] <= <GND>
out[19] <= <GND>
out[20] <= <GND>
out[21] <= <GND>
out[22] <= <GND>
out[23] <= <GND>
out[24] <= <GND>
out[25] <= <GND>
out[26] <= <GND>
out[27] <= <GND>
out[28] <= <GND>
out[29] <= <GND>
out[30] <= <GND>
out[31] <= <GND>


|alu32|slt32:slt0|sub32:sub_1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => temp_out[0].IN1
b[1] => temp_out[1].IN1
b[2] => temp_out[2].IN1
b[3] => temp_out[3].IN1
b[4] => temp_out[4].IN1
b[5] => temp_out[5].IN1
b[6] => temp_out[6].IN1
b[7] => temp_out[7].IN1
b[8] => temp_out[8].IN1
b[9] => temp_out[9].IN1
b[10] => temp_out[10].IN1
b[11] => temp_out[11].IN1
b[12] => temp_out[12].IN1
b[13] => temp_out[13].IN1
b[14] => temp_out[14].IN1
b[15] => temp_out[15].IN1
b[16] => temp_out[16].IN1
b[17] => temp_out[17].IN1
b[18] => temp_out[18].IN1
b[19] => temp_out[19].IN1
b[20] => temp_out[20].IN1
b[21] => temp_out[21].IN1
b[22] => temp_out[22].IN1
b[23] => temp_out[23].IN1
b[24] => temp_out[24].IN1
b[25] => temp_out[25].IN1
b[26] => temp_out[26].IN1
b[27] => temp_out[27].IN1
b[28] => temp_out[28].IN1
b[29] => temp_out[29].IN1
b[30] => temp_out[30].IN1
b[31] => temp_out[31].IN1
cin => cin.IN1
out[0] <= add32:add_1.port3
out[1] <= add32:add_1.port3
out[2] <= add32:add_1.port3
out[3] <= add32:add_1.port3
out[4] <= add32:add_1.port3
out[5] <= add32:add_1.port3
out[6] <= add32:add_1.port3
out[7] <= add32:add_1.port3
out[8] <= add32:add_1.port3
out[9] <= add32:add_1.port3
out[10] <= add32:add_1.port3
out[11] <= add32:add_1.port3
out[12] <= add32:add_1.port3
out[13] <= add32:add_1.port3
out[14] <= add32:add_1.port3
out[15] <= add32:add_1.port3
out[16] <= add32:add_1.port3
out[17] <= add32:add_1.port3
out[18] <= add32:add_1.port3
out[19] <= add32:add_1.port3
out[20] <= add32:add_1.port3
out[21] <= add32:add_1.port3
out[22] <= add32:add_1.port3
out[23] <= add32:add_1.port3
out[24] <= add32:add_1.port3
out[25] <= add32:add_1.port3
out[26] <= add32:add_1.port3
out[27] <= add32:add_1.port3
out[28] <= add32:add_1.port3
out[29] <= add32:add_1.port3
out[30] <= add32:add_1.port3
out[31] <= add32:add_1.port3
ccout <= <GND>


|alu32|slt32:slt0|sub32:sub_1|add32:add_10
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
b[16] => b[16].IN1
b[17] => b[17].IN1
b[18] => b[18].IN1
b[19] => b[19].IN1
b[20] => b[20].IN1
b[21] => b[21].IN1
b[22] => b[22].IN1
b[23] => b[23].IN1
b[24] => b[24].IN1
b[25] => b[25].IN1
b[26] => b[26].IN1
b[27] => b[27].IN1
b[28] => b[28].IN1
b[29] => b[29].IN1
b[30] => b[30].IN1
b[31] => b[31].IN1
cin => ~NO_FANOUT~
out[0] <= full_adder:fa1.port3
out[1] <= full_adder:fa2.port3
out[2] <= full_adder:fa3.port3
out[3] <= full_adder:fa4.port3
out[4] <= full_adder:fa5.port3
out[5] <= full_adder:fa6.port3
out[6] <= full_adder:fa7.port3
out[7] <= full_adder:fa8.port3
out[8] <= full_adder:fa9.port3
out[9] <= full_adder:fa10.port3
out[10] <= full_adder:fa20.port3
out[11] <= full_adder:fa30.port3
out[12] <= full_adder:fa40.port3
out[13] <= full_adder:fa50.port3
out[14] <= full_adder:fa60.port3
out[15] <= full_adder:fa70.port3
out[16] <= full_adder:fa80.port3
out[17] <= full_adder:fa90.port3
out[18] <= full_adder:fa100.port3
out[19] <= full_adder:fa200.port3
out[20] <= full_adder:fa300.port3
out[21] <= full_adder:fa400.port3
out[22] <= full_adder:fa500.port3
out[23] <= full_adder:fa600.port3
out[24] <= full_adder:fa700.port3
out[25] <= full_adder:fa800.port3
out[26] <= full_adder:fa900.port3
out[27] <= full_adder:fa1000.port3
out[28] <= full_adder:fa2000.port3
out[29] <= full_adder:fa3000.port3
out[30] <= full_adder:fa4000.port3
out[31] <= full_adder:fa5000.port3
cout <= <GND>


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa1
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa2
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa3
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa4
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa5
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa6
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa7
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa8
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa9
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa10
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa20
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa30
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa40
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa50
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa60
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa70
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa80
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa90
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa100
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa200
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa300
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa400
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa500
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa600
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa700
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa800
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa900
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa1000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa2000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa3000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa4000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_10|full_adder:fa5000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
a[4] => a[4].IN1
a[5] => a[5].IN1
a[6] => a[6].IN1
a[7] => a[7].IN1
a[8] => a[8].IN1
a[9] => a[9].IN1
a[10] => a[10].IN1
a[11] => a[11].IN1
a[12] => a[12].IN1
a[13] => a[13].IN1
a[14] => a[14].IN1
a[15] => a[15].IN1
a[16] => a[16].IN1
a[17] => a[17].IN1
a[18] => a[18].IN1
a[19] => a[19].IN1
a[20] => a[20].IN1
a[21] => a[21].IN1
a[22] => a[22].IN1
a[23] => a[23].IN1
a[24] => a[24].IN1
a[25] => a[25].IN1
a[26] => a[26].IN1
a[27] => a[27].IN1
a[28] => a[28].IN1
a[29] => a[29].IN1
a[30] => a[30].IN1
a[31] => a[31].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
b[4] => b[4].IN1
b[5] => b[5].IN1
b[6] => b[6].IN1
b[7] => b[7].IN1
b[8] => b[8].IN1
b[9] => b[9].IN1
b[10] => b[10].IN1
b[11] => b[11].IN1
b[12] => b[12].IN1
b[13] => b[13].IN1
b[14] => b[14].IN1
b[15] => b[15].IN1
b[16] => b[16].IN1
b[17] => b[17].IN1
b[18] => b[18].IN1
b[19] => b[19].IN1
b[20] => b[20].IN1
b[21] => b[21].IN1
b[22] => b[22].IN1
b[23] => b[23].IN1
b[24] => b[24].IN1
b[25] => b[25].IN1
b[26] => b[26].IN1
b[27] => b[27].IN1
b[28] => b[28].IN1
b[29] => b[29].IN1
b[30] => b[30].IN1
b[31] => b[31].IN1
cin => ~NO_FANOUT~
out[0] <= full_adder:fa1.port3
out[1] <= full_adder:fa2.port3
out[2] <= full_adder:fa3.port3
out[3] <= full_adder:fa4.port3
out[4] <= full_adder:fa5.port3
out[5] <= full_adder:fa6.port3
out[6] <= full_adder:fa7.port3
out[7] <= full_adder:fa8.port3
out[8] <= full_adder:fa9.port3
out[9] <= full_adder:fa10.port3
out[10] <= full_adder:fa20.port3
out[11] <= full_adder:fa30.port3
out[12] <= full_adder:fa40.port3
out[13] <= full_adder:fa50.port3
out[14] <= full_adder:fa60.port3
out[15] <= full_adder:fa70.port3
out[16] <= full_adder:fa80.port3
out[17] <= full_adder:fa90.port3
out[18] <= full_adder:fa100.port3
out[19] <= full_adder:fa200.port3
out[20] <= full_adder:fa300.port3
out[21] <= full_adder:fa400.port3
out[22] <= full_adder:fa500.port3
out[23] <= full_adder:fa600.port3
out[24] <= full_adder:fa700.port3
out[25] <= full_adder:fa800.port3
out[26] <= full_adder:fa900.port3
out[27] <= full_adder:fa1000.port3
out[28] <= full_adder:fa2000.port3
out[29] <= full_adder:fa3000.port3
out[30] <= full_adder:fa4000.port3
out[31] <= full_adder:fa5000.port3
cout <= <GND>


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa1
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa2
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa3
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa4
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa5
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa6
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa7
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa8
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa9
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa10
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa20
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa30
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa40
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa50
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa60
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa70
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa80
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa90
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa100
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa200
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa300
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa400
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa500
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa600
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa700
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa800
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa900
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa1000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa2000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa3000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa4000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|slt32:slt0|sub32:sub_1|add32:add_1|full_adder:fa5000
a => xor1.IN0
a => and2.IN0
b => xor1.IN1
b => and2.IN1
cin => xor2.IN1
cin => and1.IN1
out <= xor2.DB_MAX_OUTPUT_PORT_TYPE
cout <= or1.DB_MAX_OUTPUT_PORT_TYPE


|alu32|nor32:nor0
a[0] => nor_0.IN0
a[1] => nor_1.IN0
a[2] => nor_2.IN0
a[3] => nor_3.IN0
a[4] => nor_4.IN0
a[5] => nor_5.IN0
a[6] => nor_6.IN0
a[7] => nor_7.IN0
a[8] => nor_8.IN0
a[9] => nor_9.IN0
a[10] => nor_10.IN0
a[11] => nor_11.IN0
a[12] => nor_12.IN0
a[13] => nor_13.IN0
a[14] => nor_14.IN0
a[15] => nor_15.IN0
a[16] => nor_16.IN0
a[17] => nor_17.IN0
a[18] => nor_18.IN0
a[19] => nor_19.IN0
a[20] => nor_20.IN0
a[21] => nor_21.IN0
a[22] => nor_22.IN0
a[23] => nor_23.IN0
a[24] => nor_24.IN0
a[25] => nor_25.IN0
a[26] => nor_26.IN0
a[27] => nor_27.IN0
a[28] => nor_28.IN0
a[29] => nor_29.IN0
a[30] => nor_30.IN0
a[31] => nor_31.IN0
b[0] => nor_0.IN1
b[1] => nor_1.IN1
b[2] => nor_2.IN1
b[3] => nor_3.IN1
b[4] => nor_4.IN1
b[5] => nor_5.IN1
b[6] => nor_6.IN1
b[7] => nor_7.IN1
b[8] => nor_8.IN1
b[9] => nor_9.IN1
b[10] => nor_10.IN1
b[11] => nor_11.IN1
b[12] => nor_12.IN1
b[13] => nor_13.IN1
b[14] => nor_14.IN1
b[15] => nor_15.IN1
b[16] => nor_16.IN1
b[17] => nor_17.IN1
b[18] => nor_18.IN1
b[19] => nor_19.IN1
b[20] => nor_20.IN1
b[21] => nor_21.IN1
b[22] => nor_22.IN1
b[23] => nor_23.IN1
b[24] => nor_24.IN1
b[25] => nor_25.IN1
b[26] => nor_26.IN1
b[27] => nor_27.IN1
b[28] => nor_28.IN1
b[29] => nor_29.IN1
b[30] => nor_30.IN1
b[31] => nor_31.IN1
out[0] <= nor_0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= nor_1.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= nor_2.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= nor_3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= nor_4.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= nor_5.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= nor_6.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= nor_7.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= nor_8.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= nor_9.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= nor_10.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= nor_11.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= nor_12.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= nor_13.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= nor_14.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= nor_15.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= nor_16.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= nor_17.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= nor_18.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= nor_19.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= nor_20.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= nor_21.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= nor_22.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= nor_23.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= nor_24.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= nor_25.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= nor_26.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= nor_27.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= nor_28.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= nor_29.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= nor_30.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= nor_31.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_0
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_1
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_2
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_3
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_4
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_5
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_6
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_7
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_8
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_9
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_10
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_11
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_12
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_13
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_14
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_15
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_16
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_17
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_18
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_19
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_20
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_21
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_22
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_23
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_24
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_25
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_26
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_27
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_28
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_29
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_30
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


|alu32|mux3x8:mux_31
in[0] => and0.IN0
in[1] => and1.IN0
in[2] => and2.IN0
in[3] => and3.IN0
in[4] => and4.IN0
in[5] => and5.IN0
in[6] => and6.IN0
in[7] => and7.IN0
selector[0] => and1.IN1
selector[0] => and3.IN1
selector[0] => and5.IN1
selector[0] => and7.IN1
selector[0] => and0.IN1
selector[0] => and2.IN1
selector[0] => and4.IN1
selector[0] => and6.IN1
selector[1] => and2.IN2
selector[1] => and3.IN2
selector[1] => and6.IN2
selector[1] => and7.IN2
selector[1] => and0.IN2
selector[1] => and1.IN2
selector[1] => and4.IN2
selector[1] => and5.IN2
selector[2] => and4.IN3
selector[2] => and5.IN3
selector[2] => and6.IN3
selector[2] => and7.IN3
selector[2] => and0.IN3
selector[2] => and1.IN3
selector[2] => and2.IN3
selector[2] => and3.IN3
out <= or0.DB_MAX_OUTPUT_PORT_TYPE


